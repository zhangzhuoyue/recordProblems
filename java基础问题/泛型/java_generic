### 泛型

1. 定义 
    ```
    1. 通用性：泛型就是编写模板代码来适应任意类型，增加了代码的重用性
    2. 安全性：泛型的好处是使用时不必对类型进行强制转换，它通过编译器对类型进行检查；只要在编译时期没有出现警告，那么运行时期就不会出现ClassCastException异常
    3. 注意泛型的继承关系：可以把ArrayList<Integer>向上转型为List<Integer>（T不能变！）【但是泛型中类型不能变】，但不能把ArrayList<Integer>向上转型为ArrayList<Number>（T不能变成父类）。
    ``` 
   
2. 泛型将运行期问题提前到编译器
    ```
   1. jdk1.5之前，集合中可以装配任意的对象类型，取出这样的对象只能用Object对象接受，但是当要明确其类型时，必须强制转换，而且强制转换的错误只能在
   运行期才能发现。
   2. jdk1.5新特性泛型彻底解决了这样的问题。
      泛型规定一个类只能装什么，取出时也无需强制转换，如果放入的对象不是限定的类型，在编译器就会报错。
   ```
    1. 什么是编译器，什么是运行期 ？？？？？？

3. 泛型的向上转型
    ```
   1. 泛型子类可以向上转型为泛型父类，他的形式如下，例如：List<T>的子类ArrayList<T>
        public class ArrayList<T> implements List<T> {
            ...
        }
   2. 特别注意：ArrayList<Integer>和ArrayList<Number>两者完全没有继承关系。不能将ArrayList<Integer>向上转型为ArrayList<Number>
     
   ```




























































































